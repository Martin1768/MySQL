## 12. Functions in SQL

### HW 12.1
select 
	count(*) as total_products, 
	avg(unit_price) as average_price, 
	max(stock_quantity) as max_stock 
from products;

 total_products | average_price | max_stock
 11             | 157.354545    | 200      

### HW 12.2
select concat(first_name, ' ', last_name) as full_name, length(email) as email_length from customers;

 full_name      | email_length
 John Doe       | 18          
 Jane Smith     | 20          
 Robert Johnson | 24          
 Emily Brown    | 21          
 Michael Davis  | 23          
 Sarah Wilson   | 22          
 David Taylor   | 22          
 Lisa Anderson  | 23          


## 13. GROUP BY Clause in SQL

### HW 13.1
select customer_id, count(*) as total_orders, avg(total_amount) from orders group by customer_id;

 customer_id | total_orders | average_order_amount
 1           | 2            | 299.980000          
 2           | 2            | 502.480000          
 3           | 2            | 724.985000          
 4           | 2            | 49.985000           
 5           | 1            | 189.970000          
 6           | 1            | 114.970000          
 7           | 1            | 579.980000          
 8           | 1            | 204.950000          

### HW 13.2
select order_id, product_id, sum(quantity) as total_quantity from orderitems group by order_id, product_id;

 order_id | product_id | total_quantity
 1        | 1          | 1             
 1        | 6          | 2             
 2        | 5          | 2             
 3        | 2          | 1             
 3        | 3          | 1             
 3        | 7          | 1             
 4        | 3          | 2             
 5        | 6          | 5             
 5        | 9          | 1             
 5        | 10         | 2             
 6        | 3          | 1             
 6        | 4          | 1             
 7        | 2          | 1             
 7        | 7          | 1             
 8        | 1          | 1             
 9        | 3          | 1             
 9        | 5          | 2             
 9        | 8          | 1             
 10       | 1          | 1             
 10       | 9          | 1             
 11       | 6          | 3             
 11       | 8          | 2             
 11       | 10         | 5             
 12       | 9          | 1             


## 14. HAVING Clause in SQL

### HW 14.1
select customer_id, count(*) as order_count from orders group by customer_id having order_count > 1;

 customer_id | order_count
 1           | 2          
 2           | 2          
 3           | 2          
 4           | 2          

### HW 14.2
select category_id, count(*) as product_count, avg(unit_price) as avg_price 
from products 
group by category_id having product_count > 2 and avg_price > 100;

 category_id | product_count | avg_price 
 1           | 3             | 493.323333


## 15. Subqueries in SQL

### HW 15.1
select product_id, unit_price 
from products 
where unit_price > (select avg(unit_price) from products);

 product_id | unit_price
 1          | 499.99    
 2          | 899.99    


### HW 15.2
select customer_id, order_id, total_amount from orders o
where total_amount > (select avg(total_amount) from orders where customer_id=o.customer_id);

 customer_id | order_id | total_amount
 1           | 1        | 539.98      
 3           | 3        | 949.98      
 2           | 7        | 924.98      
 4           | 12       | 69.99       




###EOF